name: Development
on: 
  push:
    branches: development

jobs:
  Pre_release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Create GitHub release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        #VERSION=$(git rev-parse HEAD)
        gh release create 1.0.4
  Build_release:
    needs: Pre_release
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-10.15, windows-latest ]
    runs-on: ${{ matrix.os }}

    # Required to upload release artifacts to GitHub
    permissions:
      contents: write

    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Cache Node.js modules
      uses: actions/cache@v2
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-
          ${{ runner.OS }}-
    - name: Install dependencies
      run: npm ci

    - name: Build release (Linux)
      if: ${{ runner.OS == 'Linux' }}
      env:
        #CSC_LINK: "${{ secrets.CSC_LINK }}"
        #CSC_KEY_PASSWORD: "${{ secrets.CSC_KEY_PASSWORD }}"
        #ET_ENDPOINT: "${{ secrets.ET_ENDPOINT }}"
        #UPDATES_SERVER_PRODUCT_NAME: "${{ secrets.UPDATES_SERVER_PRODUCT_NAME }}"
        GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      run: npm run build -- --linux --publish
    - name: Build release (MacOS)
      if: ${{ runner.os == 'macOS' }}
      env:
        #APPLE_DEVELOPER_ID: "${{ secrets.APPLE_DEVELOPER_ID }}"
        #APPLE_DEVELOPER_ID_PASSWORD: "${{ secrets.APPLE_DEVELOPER_ID_PASSWORD }}"
        #CSC_LINK: "${{ secrets.CSC_LINK }}"
        #CSC_KEY_PASSWORD: "${{ secrets.CSC_KEY_PASSWORD }}"
        #ET_ENDPOINT: "${{ secrets.ET_ENDPOINT }}"
        #UPDATES_SERVER_PRODUCT_NAME: "${{ secrets.UPDATES_SERVER_PRODUCT_NAME }}"
        GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      run: npm run build -- --mac --publish
    - name: Build release (Windows)
      if: ${{ runner.os == 'Windows' }}
      env:
        #CSC_LINK: "${{ secrets.WIN_CSC_LINK }}"
        #CSC_KEY_PASSWORD: "${{ secrets.WIN_CSC_KEY_PASSWORD }}"
        #ET_ENDPOINT: "${{ secrets.ET_ENDPOINT }}"
        #UPDATES_SERVER_PRODUCT_NAME: "${{ secrets.UPDATES_SERVER_PRODUCT_NAME }}"
        GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      run: npm run build -- --win --publish